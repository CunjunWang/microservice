一、服务的注册于发现：Eureka
1. @EnableEurekaServer，@EnableDiscoveryClient
   心跳检测，健康检查，负载均衡
   Eureka高可用
   分布式系统中，服务与注册中心最重要
2. 服务发现的两种方式：
    (1) 客户端发现：
        优点：简单直接，不需要代理介入，知道可用服务实际地址
        缺点：需要自己实现逻辑
        Eureka采用客户端发现
    (2)服务端发现：
        优点：由于代理介入，B和服务中心对A不可见
        Nginx，Zookeeper，Kubernetes，Dubbo采用服务端发现
3. 微服务的异构特点
    不用语言，不同类型数据库 怎么调用服务
    SpringCloud服务调用方式：
        - REST or RPC?
        - Eureka提供REST接口
        - Node.js的eureka-js-client

二、微服务中的服务拆分
1. 如何拆分？
    起点：现有架构的形态
    终点：慢慢进化
2. 康威定律和微服务
3. 微服务的特点：
    · 一系列微小的服务共同组成
    · 单独部署，跑在自己的进程里
    · 每个服务为独立的业务开发
    · 分布式管理
4. 服务拆分的扩展立方模型
    X轴 水平复制，通过负载均衡实现
    Y轴 功能解耦，不同模块分成不同服务
    Z轴 数据分区
    (1) 拆分功能：
        · 单一职责、松耦合、高内聚
        · 关注点分离 DDD (Domain Drive Design)
            - 按职责：服务分类
            - 按通用性：与业务无关的基础组件也可以划分出来
            - 按粒度级别：不要分的太小
    (2) 拆分数据
        · 先考虑业务功能，再考虑数据
        · 无状态服务：如果数据需要被多个服务共享才能满足请求，称为有状态服务
        · 每个微服务都有单独的数据存储 服务之间有隔离
        · 依据服务特点选择不同的数据库类型
        · 难点在确定边界
    针对边界设计API
    依据边界权衡数据冗余

三、订单服务逻辑过程
    api参数校验
    查询商品信息（调用商品服务）
    计算总价
    更新库存（调用商品服务）
    订单入库

四、应用间通信 HTTP vs RPC
· Spring: HTTP Restful
    RestTemplate / Feign
    订单服务调用商品服务，商品服务可以作为服务端，订单服务作为客户端
· Dubbo: RPC











